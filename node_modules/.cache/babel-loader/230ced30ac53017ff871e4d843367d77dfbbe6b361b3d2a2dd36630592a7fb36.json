{"ast":null,"code":"export default class WorkTracker {\n  constructor(root) {\n    this.root = root;\n    this.root.insertAdjacentHTML(\"afterbegin\", WorkTracker.html());\n    this.loadEntries();\n    this.updateView();\n  }\n  static html() {\n    return `\n        <table class=\"tracker\">\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Workout</th>\n                    <th>Duration</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody class=\"tracker__entries\"></tbody>\n            <tbody>\n                <tr class=\"tracker__row tracker__row--add\">\n                    <td colspan=\"4\">\n                        <span class=\"tracker__add\">Add Entry &plus;</span>\n\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        `;\n  }\n  static rowHtml() {\n    return `\n        <tr class=\"tracker__row\">\n        <td>\n            <input type=\"date\" class=\"tracker__date\">\n        </td>\n        <td>\n            <select class=\"tracker__workout\">\n                <option value=\"walking\">Walking</option>\n                <option value=\"running\">Running</option>\n                <option value=\"outdoor-cycling\">Outdoor Cycling</option>\n                <option value=\"indoor-cycling\">Indoor Cycling</option>\n                <option value=\"swimming\">Swimming</option>\n                <option value=\"yoga\">Yoga</option>\n            </select>\n        </td>\n        <td>\n            <input type=\"number\" class=\"tracker__duration\">\n            <span class=\"tracker__text\">minutes</span>\n        </td>\n        <td>\n            <button type=\"button\" class=\"tracker__button\">&times;</button>\n        </td>\n    </tr>\n        `;\n  }\n  loadEntries() {\n    this.entries = JSON.parse(localStorage.getItem(\"workout-tracker-entries\") || \"[]\");\n  }\n  saveEntries() {\n    localStorage.setItem(\"workout-tracker-entries\", JSON.stringify(this.entries));\n  }\n  updateView() {\n    const tableBody = this.root.querySelector(\".tracker__entries\");\n    const addRow = data => {\n      const template = document.createElement(\"template\");\n      let row = null;\n      template.innerHTML = WorkoutTracker.rowHtml().trim();\n      row = template.content.firstElementChild;\n      tableBody.appendChild(row);\n    };\n    tableBody.querySelectorAll(\".tracker__row\").forEach(row => {\n      row.delete();\n    });\n    this.entries.forEach(data => addRow(data));\n  }\n}","map":{"version":3,"names":["WorkTracker","constructor","root","insertAdjacentHTML","html","loadEntries","updateView","rowHtml","entries","JSON","parse","localStorage","getItem","saveEntries","setItem","stringify","tableBody","querySelector","addRow","data","template","document","createElement","row","innerHTML","WorkoutTracker","trim","content","firstElementChild","appendChild","querySelectorAll","forEach","delete"],"sources":["C:/Users/Hp/Desktop/Fitness Tracker App/src/WorkTracker.js"],"sourcesContent":["export default class WorkTracker {\r\n    constructor(root){\r\n        this.root = root;\r\n        this.root.insertAdjacentHTML(\"afterbegin\", WorkTracker.html());\r\n\r\n        this.loadEntries();\r\n        this.updateView();\r\n    }\r\n\r\n    static html() {\r\n        return `\r\n        <table class=\"tracker\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Workout</th>\r\n                    <th>Duration</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"tracker__entries\"></tbody>\r\n            <tbody>\r\n                <tr class=\"tracker__row tracker__row--add\">\r\n                    <td colspan=\"4\">\r\n                        <span class=\"tracker__add\">Add Entry &plus;</span>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        `;\r\n    }\r\n\r\n    static rowHtml() {\r\n        return `\r\n        <tr class=\"tracker__row\">\r\n        <td>\r\n            <input type=\"date\" class=\"tracker__date\">\r\n        </td>\r\n        <td>\r\n            <select class=\"tracker__workout\">\r\n                <option value=\"walking\">Walking</option>\r\n                <option value=\"running\">Running</option>\r\n                <option value=\"outdoor-cycling\">Outdoor Cycling</option>\r\n                <option value=\"indoor-cycling\">Indoor Cycling</option>\r\n                <option value=\"swimming\">Swimming</option>\r\n                <option value=\"yoga\">Yoga</option>\r\n            </select>\r\n        </td>\r\n        <td>\r\n            <input type=\"number\" class=\"tracker__duration\">\r\n            <span class=\"tracker__text\">minutes</span>\r\n        </td>\r\n        <td>\r\n            <button type=\"button\" class=\"tracker__button\">&times;</button>\r\n        </td>\r\n    </tr>\r\n        `;\r\n    }\r\n\r\n    loadEntries() {\r\n        this.entries = JSON.parse(localStorage.getItem(\"workout-tracker-entries\") || \"[]\");\r\n    }\r\n\r\n    saveEntries() {\r\n        localStorage.setItem(\"workout-tracker-entries\", JSON.stringify(this.entries));\r\n    }\r\n\r\n    updateView() {\r\n        const tableBody = this.root.querySelector(\".tracker__entries\");\r\n        const addRow = data => {\r\n            const template = document.createElement(\"template\");\r\n            let row = null;\r\n\r\n            template.innerHTML = WorkoutTracker.rowHtml().trim();\r\n            row = template.content.firstElementChild;\r\n\r\n            tableBody.appendChild(row);\r\n        };\r\n\r\n        tableBody.querySelectorAll(\".tracker__row\").forEach(row => {\r\n            row.delete();\r\n        });\r\n\r\n        this.entries.forEach(data => addRow(data));\r\n    }\r\n}\r\n"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC7BC,WAAWA,CAACC,IAAI,EAAC;IACb,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACA,IAAI,CAACC,kBAAkB,CAAC,YAAY,EAAEH,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;IAE9D,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB;EAEA,OAAOF,IAAIA,CAAA,EAAG;IACV,OAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;EACL;EAEA,OAAOG,OAAOA,CAAA,EAAG;IACb,OAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;EACL;EAEAF,WAAWA,CAAA,EAAG;IACV,IAAI,CAACG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC;EACtF;EAEAC,WAAWA,CAAA,EAAG;IACVF,YAAY,CAACG,OAAO,CAAC,yBAAyB,EAAEL,IAAI,CAACM,SAAS,CAAC,IAAI,CAACP,OAAO,CAAC,CAAC;EACjF;EAEAF,UAAUA,CAAA,EAAG;IACT,MAAMU,SAAS,GAAG,IAAI,CAACd,IAAI,CAACe,aAAa,CAAC,mBAAmB,CAAC;IAC9D,MAAMC,MAAM,GAAGC,IAAI,IAAI;MACnB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MACnD,IAAIC,GAAG,GAAG,IAAI;MAEdH,QAAQ,CAACI,SAAS,GAAGC,cAAc,CAAClB,OAAO,CAAC,CAAC,CAACmB,IAAI,CAAC,CAAC;MACpDH,GAAG,GAAGH,QAAQ,CAACO,OAAO,CAACC,iBAAiB;MAExCZ,SAAS,CAACa,WAAW,CAACN,GAAG,CAAC;IAC9B,CAAC;IAEDP,SAAS,CAACc,gBAAgB,CAAC,eAAe,CAAC,CAACC,OAAO,CAACR,GAAG,IAAI;MACvDA,GAAG,CAACS,MAAM,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,IAAI,CAACxB,OAAO,CAACuB,OAAO,CAACZ,IAAI,IAAID,MAAM,CAACC,IAAI,CAAC,CAAC;EAC9C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}